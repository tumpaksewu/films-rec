import streamlit as st
import pandas as pd
import random

st.set_page_config(page_title="–°–ª—É—á–∞–π–Ω—ã–µ —Ñ–∏–ª—å–º—ã", page_icon=None, layout="wide")

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title("üé¨ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ñ–∏–ª—å–º–æ–≤")
st.subheader("–°–ª—É—á–∞–π–Ω–∞—è –ø–æ–¥–±–æ—Ä–∫–∞ –∏–∑ 10 —Ñ–∏–ª—å–º–æ–≤")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
@st.cache_data
def load_data():
    try:
        data = pd.read_csv("data/basic_data.csv")
        return data
    except FileNotFoundError:
        st.error("–§–∞–π–ª 'basic_data.csv' –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É.")
        return None


# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
movies_df = load_data()

if movies_df is not None:
    required_columns = {"movie_title", "description", "image_url"}
    if not required_columns.issubset(movies_df.columns):
        st.error(
            "–§–∞–π–ª –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–æ–ª–æ–Ω–∫–∏ 'movie_title', 'description' –∏ 'image_url'."
        )
    else:
        if len(movies_df) < 10:
            st.warning("–í —Ñ–∞–π–ª–µ –º–µ–Ω—å—à–µ 10 —Ñ–∏–ª—å–º–æ–≤. –ü–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ:")
            selected_movies = movies_df.copy()
        else:
            selected_movies = movies_df.sample(10)

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞
        placeholder_url = (
            "https://critics.io/img/movies/poster-placeholder.png?text=–ù–µ—Ç+–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
        )

        # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ —Å–µ—Ç–∫–∏: 5 —Ä—è–¥–æ–≤, –ø–æ 4 –∫–æ–ª–æ–Ω–∫–∏ (image-expander x2)
        st.success("–í–æ—Ç –≤–∞—à–∞ —Å–ª—É—á–∞–π–Ω–∞—è –ø–æ–¥–±–æ—Ä–∫–∞:")

        rows = [
            selected_movies.iloc[i : i + 2] for i in range(0, 10, 2)
        ]  # 5 —Ä—è–¥–æ–≤ –ø–æ 2 —Ñ–∏–ª—å–º–∞

        for row in rows:
            cols = st.columns(4)

            for idx, (i, movie) in enumerate(row.iterrows()):
                col_img = cols[idx * 2]
                col_exp = cols[idx * 2 + 1]

                # –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ URL
                image_url = movie["image_url"]
                if (
                    pd.notna(image_url)
                    and isinstance(image_url, str)
                    and image_url.strip() != ""
                ):
                    col_img.image(image_url, use_container_width=True)
                else:
                    col_img.image(placeholder_url, use_container_width=True)

                with col_exp.expander(f"**üé• {movie['movie_title']}**"):
                    st.write(movie["description"])
                    st.write(f"**ID —Ñ–∏–ª—å–º–∞:** {movie.name}")

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å
with st.sidebar:
    st.header("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    if st.button("–û–±–Ω–æ–≤–∏—Ç—å –ø–æ–¥–±–æ—Ä–∫—É") and movies_df is not None:
        st.experimental_rerun()
